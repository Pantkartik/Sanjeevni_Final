# Generated by Django 5.0.6 on 2025-08-24 10:11

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('notification_type', models.CharField(choices=[('reminder', 'Pill Reminder'), ('appointment', 'Appointment'), ('general', 'General'), ('emergency', 'Emergency')], max_length=20)),
                ('title_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('variables', models.JSONField(default=list, help_text='List of variables used in the template')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('reminder', 'Pill Reminder'), ('appointment', 'Appointment'), ('general', 'General'), ('emergency', 'Emergency')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict, help_text='Additional data for the notification')),
                ('firebase_token', models.CharField(blank=True, max_length=500)),
                ('firebase_message_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(max_length=200)),
                ('dosage', models.CharField(help_text='e.g., 1 tablet, 2 capsules', max_length=100)),
                ('time', models.TimeField(help_text='Time to take the medicine')),
                ('date', models.DateField(default=datetime.date.today, help_text='Start date for the reminder')),
                ('repeat_pattern', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom'), ('none', 'No Repeat')], default='daily', max_length=20)),
                ('custom_days', models.JSONField(blank=True, default=list, help_text='Custom days for weekly/monthly repeat')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('instructions', models.TextField(blank=True, help_text='Special instructions')),
                ('before_after_meal', models.CharField(choices=[('before', 'Before Meal'), ('after', 'After Meal'), ('with', 'With Meal'), ('anytime', 'Anytime')], default='anytime', max_length=20)),
                ('notification_enabled', models.BooleanField(default=True)),
                ('reminder_before', models.IntegerField(default=15, help_text='Minutes before scheduled time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_taken', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reminder',
                'verbose_name_plural': 'Reminders',
                'ordering': ['time', 'date'],
            },
        ),
        migrations.CreateModel(
            name='ReminderLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField()),
                ('taken_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('taken', 'Taken'), ('missed', 'Missed'), ('snoozed', 'Snoozed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reminder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='reminders.reminder')),
            ],
            options={
                'verbose_name': 'Reminder Log',
                'verbose_name_plural': 'Reminder Logs',
                'ordering': ['-scheduled_time'],
            },
        ),
    ]
